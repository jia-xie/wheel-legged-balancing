ARM GAS  /tmp/ccNDC6CW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB137:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "i2c.h"
  25:Core/Src/main.c **** #include "spi.h"
  26:Core/Src/main.c **** #include "tim.h"
  27:Core/Src/main.c **** #include "usart.h"
  28:Core/Src/main.c **** #include "gpio.h"
  29:Core/Src/main.c **** 
ARM GAS  /tmp/ccNDC6CW.s 			page 2


  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** #include "global_define.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
ARM GAS  /tmp/ccNDC6CW.s 			page 3


  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_DMA_Init();
  97:Core/Src/main.c ****   MX_USART3_UART_Init();
  98:Core/Src/main.c ****   MX_TIM1_Init();
  99:Core/Src/main.c ****   MX_TIM8_Init();
 100:Core/Src/main.c ****   MX_SPI1_Init();
 101:Core/Src/main.c ****   MX_TIM10_Init();
 102:Core/Src/main.c ****   MX_I2C3_Init();
 103:Core/Src/main.c ****   MX_TIM5_Init();
 104:Core/Src/main.c ****   MX_CAN1_Init();
 105:Core/Src/main.c ****   MX_CAN2_Init();
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 111:Core/Src/main.c ****   MX_FREERTOS_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Start scheduler */
 114:Core/Src/main.c ****   osKernelStart();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief System Clock Configuration
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 143:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  /tmp/ccNDC6CW.s 			page 4


 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 174:Core/Src/main.c **** /* USER CODE END 4 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /**
 177:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 178:Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 179:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 180:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 181:Core/Src/main.c ****   * @param  htim : TIM handle
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 185:Core/Src/main.c **** {
  30              		.loc 1 185 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 185 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 186:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 189:Core/Src/main.c ****   if (htim->Instance == TIM2) {
  40              		.loc 1 189 3 is_stmt 1 view .LVU2
ARM GAS  /tmp/ccNDC6CW.s 			page 5


  41              		.loc 1 189 11 is_stmt 0 view .LVU3
  42 0002 0368     		ldr	r3, [r0]
  43              		.loc 1 189 6 view .LVU4
  44 0004 B3F1804F 		cmp	r3, #1073741824
  45 0008 00D0     		beq	.L4
  46              	.LVL1:
  47              	.L1:
 190:Core/Src/main.c ****     HAL_IncTick();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 195:Core/Src/main.c **** }
  48              		.loc 1 195 1 view .LVU5
  49 000a 08BD     		pop	{r3, pc}
  50              	.LVL2:
  51              	.L4:
 190:Core/Src/main.c ****     HAL_IncTick();
  52              		.loc 1 190 5 is_stmt 1 view .LVU6
  53 000c FFF7FEFF 		bl	HAL_IncTick
  54              	.LVL3:
  55              		.loc 1 195 1 is_stmt 0 view .LVU7
  56 0010 FBE7     		b	.L1
  57              		.cfi_endproc
  58              	.LFE137:
  60              		.section	.text.Error_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	Error_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	Error_Handler:
  69              	.LFB138:
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** void Error_Handler(void)
 202:Core/Src/main.c **** {
  70              		.loc 1 202 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
 203:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 205:Core/Src/main.c ****   __disable_irq();
  76              		.loc 1 205 3 view .LVU9
  77              	.LBB4:
  78              	.LBI4:
  79              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  /tmp/ccNDC6CW.s 			page 6


   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccNDC6CW.s 			page 7


  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccNDC6CW.s 			page 8


 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  80              		.loc 2 140 27 view .LVU10
  81              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  82              		.loc 2 142 3 view .LVU11
  83              		.syntax unified
  84              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  85 0000 72B6     		cpsid i
  86              	@ 0 "" 2
  87              		.thumb
  88              		.syntax unified
  89              	.L6:
  90              	.LBE5:
  91              	.LBE4:
 206:Core/Src/main.c ****   while (1)
  92              		.loc 1 206 3 discriminator 1 view .LVU12
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****   }
  93              		.loc 1 208 3 discriminator 1 view .LVU13
 206:Core/Src/main.c ****   while (1)
  94              		.loc 1 206 9 discriminator 1 view .LVU14
  95 0002 FEE7     		b	.L6
  96              		.cfi_endproc
  97              	.LFE138:
  99              		.section	.text.SystemClock_Config,"ax",%progbits
 100              		.align	1
 101              		.global	SystemClock_Config
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
 107              	SystemClock_Config:
 108              	.LFB136:
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccNDC6CW.s 			page 9


 109              		.loc 1 133 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 80
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 00B5     		push	{lr}
 114              	.LCFI1:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 14, -4
 117 0002 95B0     		sub	sp, sp, #84
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 88
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120              		.loc 1 134 3 view .LVU16
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121              		.loc 1 134 22 is_stmt 0 view .LVU17
 122 0004 3022     		movs	r2, #48
 123 0006 0021     		movs	r1, #0
 124 0008 08A8     		add	r0, sp, #32
 125 000a FFF7FEFF 		bl	memset
 126              	.LVL4:
 135:Core/Src/main.c **** 
 127              		.loc 1 135 3 is_stmt 1 view .LVU18
 135:Core/Src/main.c **** 
 128              		.loc 1 135 22 is_stmt 0 view .LVU19
 129 000e 0023     		movs	r3, #0
 130 0010 0393     		str	r3, [sp, #12]
 131 0012 0493     		str	r3, [sp, #16]
 132 0014 0593     		str	r3, [sp, #20]
 133 0016 0693     		str	r3, [sp, #24]
 134 0018 0793     		str	r3, [sp, #28]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 135              		.loc 1 139 3 is_stmt 1 view .LVU20
 136              	.LBB6:
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 137              		.loc 1 139 3 view .LVU21
 138 001a 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 139              		.loc 1 139 3 view .LVU22
 140 001c 204A     		ldr	r2, .L13
 141 001e 116C     		ldr	r1, [r2, #64]
 142 0020 41F08051 		orr	r1, r1, #268435456
 143 0024 1164     		str	r1, [r2, #64]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 144              		.loc 1 139 3 view .LVU23
 145 0026 126C     		ldr	r2, [r2, #64]
 146 0028 02F08052 		and	r2, r2, #268435456
 147 002c 0192     		str	r2, [sp, #4]
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 148              		.loc 1 139 3 view .LVU24
 149 002e 019A     		ldr	r2, [sp, #4]
 150              	.LBE6:
 139:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151              		.loc 1 139 3 view .LVU25
 140:Core/Src/main.c **** 
 152              		.loc 1 140 3 view .LVU26
 153              	.LBB7:
 140:Core/Src/main.c **** 
ARM GAS  /tmp/ccNDC6CW.s 			page 10


 154              		.loc 1 140 3 view .LVU27
 155 0030 0293     		str	r3, [sp, #8]
 140:Core/Src/main.c **** 
 156              		.loc 1 140 3 view .LVU28
 157 0032 1C4B     		ldr	r3, .L13+4
 158 0034 1A68     		ldr	r2, [r3]
 159 0036 42F48042 		orr	r2, r2, #16384
 160 003a 1A60     		str	r2, [r3]
 140:Core/Src/main.c **** 
 161              		.loc 1 140 3 view .LVU29
 162 003c 1B68     		ldr	r3, [r3]
 163 003e 03F48043 		and	r3, r3, #16384
 164 0042 0293     		str	r3, [sp, #8]
 140:Core/Src/main.c **** 
 165              		.loc 1 140 3 view .LVU30
 166 0044 029B     		ldr	r3, [sp, #8]
 167              	.LBE7:
 140:Core/Src/main.c **** 
 168              		.loc 1 140 3 view .LVU31
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 169              		.loc 1 145 3 view .LVU32
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 170              		.loc 1 145 36 is_stmt 0 view .LVU33
 171 0046 0123     		movs	r3, #1
 172 0048 0893     		str	r3, [sp, #32]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 173              		.loc 1 146 3 is_stmt 1 view .LVU34
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 174              		.loc 1 146 30 is_stmt 0 view .LVU35
 175 004a 4FF48033 		mov	r3, #65536
 176 004e 0993     		str	r3, [sp, #36]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 177              		.loc 1 147 3 is_stmt 1 view .LVU36
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 178              		.loc 1 147 34 is_stmt 0 view .LVU37
 179 0050 0223     		movs	r3, #2
 180 0052 0E93     		str	r3, [sp, #56]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 181              		.loc 1 148 3 is_stmt 1 view .LVU38
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 182              		.loc 1 148 35 is_stmt 0 view .LVU39
 183 0054 4FF48002 		mov	r2, #4194304
 184 0058 0F92     		str	r2, [sp, #60]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 185              		.loc 1 149 3 is_stmt 1 view .LVU40
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 186              		.loc 1 149 30 is_stmt 0 view .LVU41
 187 005a 0622     		movs	r2, #6
 188 005c 1092     		str	r2, [sp, #64]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 189              		.loc 1 150 3 is_stmt 1 view .LVU42
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 190              		.loc 1 150 30 is_stmt 0 view .LVU43
 191 005e A822     		movs	r2, #168
 192 0060 1192     		str	r2, [sp, #68]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 193              		.loc 1 151 3 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccNDC6CW.s 			page 11


 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 194              		.loc 1 151 30 is_stmt 0 view .LVU45
 195 0062 1293     		str	r3, [sp, #72]
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 196              		.loc 1 152 3 is_stmt 1 view .LVU46
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197              		.loc 1 152 30 is_stmt 0 view .LVU47
 198 0064 0423     		movs	r3, #4
 199 0066 1393     		str	r3, [sp, #76]
 153:Core/Src/main.c ****   {
 200              		.loc 1 153 3 is_stmt 1 view .LVU48
 153:Core/Src/main.c ****   {
 201              		.loc 1 153 7 is_stmt 0 view .LVU49
 202 0068 08A8     		add	r0, sp, #32
 203 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 204              	.LVL5:
 153:Core/Src/main.c ****   {
 205              		.loc 1 153 6 view .LVU50
 206 006e 98B9     		cbnz	r0, .L11
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207              		.loc 1 160 3 is_stmt 1 view .LVU51
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 208              		.loc 1 160 31 is_stmt 0 view .LVU52
 209 0070 0F23     		movs	r3, #15
 210 0072 0393     		str	r3, [sp, #12]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211              		.loc 1 162 3 is_stmt 1 view .LVU53
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212              		.loc 1 162 34 is_stmt 0 view .LVU54
 213 0074 0223     		movs	r3, #2
 214 0076 0493     		str	r3, [sp, #16]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 215              		.loc 1 163 3 is_stmt 1 view .LVU55
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 216              		.loc 1 163 35 is_stmt 0 view .LVU56
 217 0078 0023     		movs	r3, #0
 218 007a 0593     		str	r3, [sp, #20]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 219              		.loc 1 164 3 is_stmt 1 view .LVU57
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 220              		.loc 1 164 36 is_stmt 0 view .LVU58
 221 007c 4FF4A053 		mov	r3, #5120
 222 0080 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c **** 
 223              		.loc 1 165 3 is_stmt 1 view .LVU59
 165:Core/Src/main.c **** 
 224              		.loc 1 165 36 is_stmt 0 view .LVU60
 225 0082 4FF48053 		mov	r3, #4096
 226 0086 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   {
 227              		.loc 1 167 3 is_stmt 1 view .LVU61
 167:Core/Src/main.c ****   {
 228              		.loc 1 167 7 is_stmt 0 view .LVU62
 229 0088 0521     		movs	r1, #5
 230 008a 03A8     		add	r0, sp, #12
 231 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 232              	.LVL6:
ARM GAS  /tmp/ccNDC6CW.s 			page 12


 167:Core/Src/main.c ****   {
 233              		.loc 1 167 6 view .LVU63
 234 0090 20B9     		cbnz	r0, .L12
 171:Core/Src/main.c **** 
 235              		.loc 1 171 1 view .LVU64
 236 0092 15B0     		add	sp, sp, #84
 237              	.LCFI3:
 238              		.cfi_remember_state
 239              		.cfi_def_cfa_offset 4
 240              		@ sp needed
 241 0094 5DF804FB 		ldr	pc, [sp], #4
 242              	.L11:
 243              	.LCFI4:
 244              		.cfi_restore_state
 155:Core/Src/main.c ****   }
 245              		.loc 1 155 5 is_stmt 1 view .LVU65
 246 0098 FFF7FEFF 		bl	Error_Handler
 247              	.LVL7:
 248              	.L12:
 169:Core/Src/main.c ****   }
 249              		.loc 1 169 5 view .LVU66
 250 009c FFF7FEFF 		bl	Error_Handler
 251              	.LVL8:
 252              	.L14:
 253              		.align	2
 254              	.L13:
 255 00a0 00380240 		.word	1073887232
 256 00a4 00700040 		.word	1073770496
 257              		.cfi_endproc
 258              	.LFE136:
 260              		.section	.text.main,"ax",%progbits
 261              		.align	1
 262              		.global	main
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	main:
 269              	.LFB135:
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 270              		.loc 1 73 1 view -0
 271              		.cfi_startproc
 272              		@ Volatile: function does not return.
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 08B5     		push	{r3, lr}
 276              	.LCFI5:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 3, -8
 279              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 280              		.loc 1 81 3 view .LVU68
 281 0002 FFF7FEFF 		bl	HAL_Init
 282              	.LVL9:
  88:Core/Src/main.c **** 
 283              		.loc 1 88 3 view .LVU69
 284 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccNDC6CW.s 			page 13


 285              	.LVL10:
  95:Core/Src/main.c ****   MX_DMA_Init();
 286              		.loc 1 95 3 view .LVU70
 287 000a FFF7FEFF 		bl	MX_GPIO_Init
 288              	.LVL11:
  96:Core/Src/main.c ****   MX_USART3_UART_Init();
 289              		.loc 1 96 3 view .LVU71
 290 000e FFF7FEFF 		bl	MX_DMA_Init
 291              	.LVL12:
  97:Core/Src/main.c ****   MX_TIM1_Init();
 292              		.loc 1 97 3 view .LVU72
 293 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 294              	.LVL13:
  98:Core/Src/main.c ****   MX_TIM8_Init();
 295              		.loc 1 98 3 view .LVU73
 296 0016 FFF7FEFF 		bl	MX_TIM1_Init
 297              	.LVL14:
  99:Core/Src/main.c ****   MX_SPI1_Init();
 298              		.loc 1 99 3 view .LVU74
 299 001a FFF7FEFF 		bl	MX_TIM8_Init
 300              	.LVL15:
 100:Core/Src/main.c ****   MX_TIM10_Init();
 301              		.loc 1 100 3 view .LVU75
 302 001e FFF7FEFF 		bl	MX_SPI1_Init
 303              	.LVL16:
 101:Core/Src/main.c ****   MX_I2C3_Init();
 304              		.loc 1 101 3 view .LVU76
 305 0022 FFF7FEFF 		bl	MX_TIM10_Init
 306              	.LVL17:
 102:Core/Src/main.c ****   MX_TIM5_Init();
 307              		.loc 1 102 3 view .LVU77
 308 0026 FFF7FEFF 		bl	MX_I2C3_Init
 309              	.LVL18:
 103:Core/Src/main.c ****   MX_CAN1_Init();
 310              		.loc 1 103 3 view .LVU78
 311 002a FFF7FEFF 		bl	MX_TIM5_Init
 312              	.LVL19:
 104:Core/Src/main.c ****   MX_CAN2_Init();
 313              		.loc 1 104 3 view .LVU79
 314 002e FFF7FEFF 		bl	MX_CAN1_Init
 315              	.LVL20:
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 316              		.loc 1 105 3 view .LVU80
 317 0032 FFF7FEFF 		bl	MX_CAN2_Init
 318              	.LVL21:
 111:Core/Src/main.c **** 
 319              		.loc 1 111 3 view .LVU81
 320 0036 FFF7FEFF 		bl	MX_FREERTOS_Init
 321              	.LVL22:
 114:Core/Src/main.c **** 
 322              		.loc 1 114 3 view .LVU82
 323 003a FFF7FEFF 		bl	osKernelStart
 324              	.LVL23:
 325              	.L16:
 119:Core/Src/main.c ****   {
 326              		.loc 1 119 3 discriminator 1 view .LVU83
 124:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /tmp/ccNDC6CW.s 			page 14


 327              		.loc 1 124 3 discriminator 1 view .LVU84
 119:Core/Src/main.c ****   {
 328              		.loc 1 119 9 discriminator 1 view .LVU85
 329 003e FEE7     		b	.L16
 330              		.cfi_endproc
 331              	.LFE135:
 333              		.text
 334              	.Letext0:
 335              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 336              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 337              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 338              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 339              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 340              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 341              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 342              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 343              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 344              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 345              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 346              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 347              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 348              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 349              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 350              		.file 18 "Core/Inc/can.h"
 351              		.file 19 "Core/Inc/i2c.h"
 352              		.file 20 "Core/Inc/spi.h"
 353              		.file 21 "Core/Inc/tim.h"
 354              		.file 22 "Core/Inc/usart.h"
 355              		.file 23 "Core/Inc/gpio.h"
 356              		.file 24 "Core/Inc/dma.h"
 357              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 358              		.file 26 "<built-in>"
ARM GAS  /tmp/ccNDC6CW.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccNDC6CW.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccNDC6CW.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccNDC6CW.s:61     .text.Error_Handler:0000000000000000 $t
     /tmp/ccNDC6CW.s:68     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccNDC6CW.s:100    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccNDC6CW.s:107    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccNDC6CW.s:255    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccNDC6CW.s:261    .text.main:0000000000000000 $t
     /tmp/ccNDC6CW.s:268    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_TIM1_Init
MX_TIM8_Init
MX_SPI1_Init
MX_TIM10_Init
MX_I2C3_Init
MX_TIM5_Init
MX_CAN1_Init
MX_CAN2_Init
MX_FREERTOS_Init
osKernelStart
